name: CI
on: [push]
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.16", "1.17", "1.18", "1.19", "1.20"]

    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Test Ensure Package
        run: go test -race -coverprofile=pkg-coverage.txt -covermode=atomic ./...

      - name: Upload package coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: pkg-coverage.txt
          flags: package

      - name: Test Ensure CLI
        run: (cd cmd/ensure; go test -race -coverprofile=../../cli-coverage.txt -covermode=atomic ./...)

      - name: Upload CLI coverage to codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: cli-coverage.txt
          flags: cli

  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.16", "1.17", "1.18", "1.19", "1.20"]

    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Lint Ensure Package
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.51.0
          skip-go-installation: true

      - name: Lint Ensure CLI
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.51.0
          skip-go-installation: true
          working-directory: cmd/ensure

  regression-test:
    name: Regression Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.16", "1.17", "1.18", "1.19", "1.20"]

    steps:
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out code
        uses: actions/checkout@v2

      - name: Generate Package Mocks
        run: make generate-mocks

      - name: Generate CLI Mocks
        run: (cd cmd/ensure; make generate-mocks)

      - name: Run go fmt for package
        run: go fmt ./...

      - name: Run go fmt for CLI
        run: (cd cmd/ensure; go fmt ./...)

      - name: Git diff
        run: git diff

      - name: Verify mocks are up-to-date
        run: |
          git status --porcelain | grep mocks/ || true

          if [[ $(git status --porcelain | grep mocks/ 2> /dev/null) ]]; then
            echo "❌ Please run `make generate-mocks`";
            exit 1;
          else
            echo "✅ `make generate-mocks` was run";
          fi
